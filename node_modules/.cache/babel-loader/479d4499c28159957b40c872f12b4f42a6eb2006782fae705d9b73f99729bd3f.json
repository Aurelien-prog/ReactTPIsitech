{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [maVariable, newmaVar] = useState(12);\n  const onClick = test => {\n    newmaVar += 12;\n    document.getElementById('test').innerHTML = newmaVar;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"BOUTON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: maVariable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"wWyZq72uyiGS9svjbZoAt5jXebw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","maVariable","newmaVar","onClick","test","document","getElementById","innerHTML"],"sources":["C:/REACT/my-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst App = () => {\n\n  const [maVariable, newmaVar] = useState(12)\n\n  const onClick = (test) => {\n    newmaVar += 12;\n    document.getElementById('test').innerHTML = newmaVar;\n  }\n  \n  return (\n    <>\n    <button onClick={onClick}>BOUTON</button>\n    <div>{maVariable}</div>\n    </>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMI,OAAO,GAAIC,IAAI,IAAK;IACxBF,QAAQ,IAAI,EAAE;IACdG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,SAAS,GAAGL,QAAQ;EACtD,CAAC;EAED,oBACE;IAAA,wBACA;MAAQ,OAAO,EAAEC,OAAQ;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eACzC;MAAA,UAAMF;IAAU;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA,gBACpB;AAEP,CAAC;AAAA,GAfKD,GAAG;AAAA,KAAHA,GAAG;AAiBT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}